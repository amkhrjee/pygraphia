Graph methods: 
    - is_connected
    - is_regular
    - is_planar
    - is_cyclic
    - is_cycle_graph
    - is_complete
Graph properties:
    - vertex list
    - boolean values
        - planar 
        - cyclic 
        - cycle_graph 
        - complete 
        - regular 
        - connected

current bugs:
    - add_edge: should add proper vertex attributes

draft: 

    def add_edge(self, src: Vertex, dest: Vertex, label: str = '', weight: float = 0) -> None:
        # our adj list for digraph only stores vertices
        # that are connected by outwards going edges
        edge = Edge(src, dest, label, weight)
        if self.__weighted:
            for key in self.__adj_list.keys():
                if key is src:
                    key.outgoing_edges.append(edge)
                    key.neighbor.append(dest)
            dest.incoming_edges.append(edge)
            self.__out_adj_list[src].append(dest)
        else:
            for key in self.__adj_list.keys():
                if key is src:
                    key.neighbors.append(dest)
                    dest.neighbors.append(key)
                    key.outgoing_edges.append(edge)
                    key.incoming_edges.append(edge)
            dest.incoming_edges.append(edge)
            dest.outgoing_edges.append(edge)
        self.__adj_list[src].append(dest)
        self.__adj_list[dest].append(src)